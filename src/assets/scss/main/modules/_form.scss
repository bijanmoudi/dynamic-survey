
/*====================================
=            Form Modules            =
====================================*/

$border-width : 2px;

.m-input {
	display: inline-block;
	width: em( 225 );
	max-width: 100%;
	vertical-align: middle;
	line-height: 1;
	& > * {
		appearance: none;
	}
	select {
		width: 100%;
		height: em( 48 );
		padding: em( 10 ) em( 40 ) em( 10 ) em( 20 );
		border: $border-width solid get-color( 'red' );
		border-radius: rem( $border-radius );
		background-color: lighten( get-color( 'gray-light' ), 4 );
		box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0 ), 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0.5 ) inset;
		transition: background-color 250ms ease, box-shadow 250ms ease;
		line-height: 1.1;
		@extend .noselect;
		&:focus {
			background-color: get-color( 'white' );
			box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0.5 ), 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0.5 ) inset;
		}
		&:active {
			transition-duration: 0ms;
			box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0.5 ), 0 0 rem( $box-shadow-blur * 2 ) rgba( get-color( 'red' ), 0.5 ) inset;
		}
	}
	input[type="radio"],
	input[type="checkbox"] {
		@extend .hidden--visually;
		&:active {
			& ~ .input__label {
				&::before {
					transform: scale( 0.9 );
				}
			}
		}
		&:checked {
			& ~ .input__label {
				&::before {
					box-shadow: 0 0 0 em( 5 ) get-color( 'white' ) inset;
				}
			}
		}
		&:focus,
		&:active {
			& ~ .input__label {
				&::before {
					box-shadow: 0 0 0 em( 13 ) get-color( 'white' ) inset, 0 0 rem( $box-shadow-blur ) get-color( 'black', 0.5 );
				}
			}
			&:checked {
				& ~ .input__label {
					&::before {
						box-shadow: 0 0 0 em( 5 ) get-color( 'white' ) inset, 0 0 rem( $box-shadow-blur ) get-color( 'black', 0.5 );
					}
				}
			}
		}
	}
	input[type="url"],
	input[type="tel"],
	input[type="text"],
	input[type="email"],
	input[type="search"],
	input[type="number"],
	input[type="password"] {
		display: block;
		width: 100%;
		height: em( 48 );
		padding: em( 10 ) em( 20 );
		border: $border-width solid get-color( 'red' );
		border-radius: rem( $border-radius );
		background-color: lighten( get-color( 'gray-light' ), 4 );
		box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0 );
		transition: background-color 250ms ease, box-shadow 250ms ease;
		line-height: 1;
		&::placeholder {
			color: get-color( 'silver' );
			transition:color 250ms ease;
		}
		&:focus {
			background-color: get-color( 'white' );
			box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0.5 );
			&::placeholder {
				color: get-color( 'silver', 0.5 );
			}
		}
	}
	&.input {
		&--select {
			position: relative;
			&::after {
				content: '';
				position: absolute;
				top: 50%;
				right: em( 20 );
				width: 0;
				height: 0;
				border-style: solid;
				border-width: rem( 6 ) rem( 5 ) 0 rem( 5 );
				border-color: get-color( 'red' ) transparent transparent transparent;
				transform: translateY( -50% );
				pointer-events: none;
			}
		}
		&--radio,
		&--checkbox {
			width: auto;
			margin-left: em( 10 );
			margin-right: em( 10 );
			.input {
				&__label {
					display: inline-flex;
					align-self: center;
					margin-top: em( 3 );
					line-height: 1.2;
					text-align: left;
					cursor: pointer;
					@extend .noselect;
					&::before {
						content: '';
						flex-shrink: 0;
						display: inline-block;
						width: em( 24 );
						height: em( 24 );
						margin-top: em( -4 );
						margin-right: em( 8 );
						vertical-align: middle;
						border-radius: 50%;
						border: $border-width solid get-color( 'red' );
						box-shadow: 0 0 0 em( 13 ) get-color( 'white' ) inset;
						background-color: get-color( 'red' );
						transition: box-shadow 250ms ease;
					}
				}
			}
			&:not( .input--centered ) {
				.input {
					&__label {
						width: 100%;
						text-align: left;
					}
				}
			}
		}
		&--centered {
			& > * {
				text-align: center;
			}
		}
	}
}

.m-button {
	min-width: em( 115 );
	padding: em( 12 ) em( 16 );
	border: $border-width solid get-color( 'red' );
	border-radius: rem( $border-radius );
	box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0 );
	background-color: rgba( get-color( 'white' ), 0.4 );
	color: get-color( 'red' );
	transition: background-color 250ms ease, box-shadow 250ms ease, opacity 250ms ease;
	line-height: 1;
	font-weight: 700;
	cursor: pointer;
	@extend .noselect;
	&:active {
		transform: scale( 0.97 );
	}
	&:focus,
	&:not( [disabled] ):hover {
		background-color: rgba( get-color( 'white' ), 0.5 );
		box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'red' ), 0.5 );
	}
	&[disabled] {
		opacity: 0.25;
		cursor: not-allowed;
	}
	&.button {
		&--primary {
			background-color: get-color( 'red' );
			color: get-color( 'white' );
			&:focus,
			&:not( [disabled] ):hover {
				box-shadow: 0 0 rem( $box-shadow-blur ) rgba( get-color( 'black' ), 0.5 );
				background-color: get-color( 'red' );
				color: get-color( 'white' );
			}
		}
	}
}